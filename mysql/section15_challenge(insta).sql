-- Active: 1664945899270@@sonky.myasustor.com@3306@instagram_clone
/* Find the 5 oldest users. */
-- SELECT * FROM users ORDER BY created_at LIMIT 5;
/* What day of the week do most users register on? */
-- SELECT
--   DAYNAME (created_at) AS day,
--   COUNT(*) AS total
-- FROM
--   users
-- GROUP BY
--   day
-- ORDER BY
--   total DESC
-- LIMIT
--   2;
/* Find the users who have never posted a photo */
-- SELECT username FROM users LEFT JOIN photos ON users.id = photos.user_id WHERE photos.id IS NULL;
/* We're running a new contest to see who can get the most likes on a single photo. WHO WON??!! */
-- SELECT
--   username,
--   photos.id,
--   photos.image_url,
--   COUNT(*) AS total
-- FROM
--   photos
--   INNER JOIN likes ON likes.photo_id = photos.id
--   INNER JOIN users ON photos.user_id = users.id
-- GROUP BY
--   photos.id
-- ORDER BY
--   total DESC
-- LIMIT
--   1;
/* How many times does the average user post? */
-- SELECT (SELECT COUNT(*) FROM photos) / (SELECT COUNT(*) FROM users) AS average;
/* What are the top 5 most commonly used hashtags? */
-- SELECT
--   tags.tag_name,
--   Count(*) AS total
-- FROM
--   photo_tags
--   JOIN tags ON photo_tags.tag_id = tags.id
-- GROUP BY
--   tags.id
-- ORDER BY
--   total DESC
-- LIMIT
--   5;
/* Find users who have liked every single photo on the site */
-- SELECT
--   username,
--   Count(*) AS num_likes
-- FROM
--   users
--   INNER JOIN likes ON users.id = likes.user_id
-- GROUP BY
--   likes.user_id
-- HAVING
--   num_likes = (
--     SELECT
--       Count(*)
--     FROM
--       photos
--   );
/* Find users who have never commented on a photo */
-- SELECT
--   username
-- FROM
--   users
--   LEFT JOIN comments ON users.id = comments.user_id
-- WHERE
--   comments.id IS NULL;
/* Find the percentage of our users who have either never commented on a photo or have commented on every photo */
-- SELECT
--   COUNT(*) AS total
-- FROM
--   users
--   LEFT JOIN comments ON users.id = comments.user_id
-- WHERE
--   comments.id IS NULL
--   OR users.id IN (
--     SELECT
--       users.id
--     FROM
--       users
--       INNER JOIN comments ON users.id = comments.user_id
--     GROUP BY
--       comments.user_id
--     HAVING
--       COUNT(*) = (
--         SELECT
--           COUNT(*)
--         FROM
--           photos
--       )
--   );